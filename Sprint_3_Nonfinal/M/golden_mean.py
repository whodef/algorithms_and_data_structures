"""
M. Золотая середина

___________________________________________________________________________________________________
| Язык                   | Ограничение времени | Ограничение памяти |  Ввод        |  Вывод       |
___________________________________________________________________________________________________
| Все языки              | 0.058 секунд        | 64Mb               |              |              |
| Node.js 14.15.5        | 0.084 секунды       | 64Mb               | стандартный  | стандартный  |
| OpenJDK Java 11        | 0.4 секунды         | 64Mb               | ввод или     | ввод или     |
| C# (MS .NET 6.0 + ASP) | 0.18 секунд         | 64Mb               | input.txt    | output.txt   |
| C# (MS .NET 5.0 + ASP) | 0.18 секунд         | 64Mb               |              |              |
___________________________________________________________________________________________________

Задача повышенной сложности

На каждом острове в архипелаге Алгосы живёт какое-то количество людей или же остров необитаем
(тогда на острове живёт 0 людей). Пусть на i-м острове численность населения составляет ai. Тимофей
захотел найти медиану среди всех значений численности населения.

Определение: Медиана (https://ru.wikipedia.org/wiki/Медиана_(статистика)) массива чисел a_i — это такое число,
что половина чисел из массива не больше него, а другая половина не меньше. В общем случае медиану массива можно
найти, отсортировав числа и взяв среднее из них. Если количество чисел чётно, то возьмём в качестве медианы
полусумму соседних средних чисел, (a[n/2] + a[n/2 + 1])/2.

У Тимофея уже есть отдельно данные по северной части архипелага и по южной, причём значения численности населения
в каждой группе отсортированы по не убыванию.

Определите медианную численность населения по всем островам Алгосов.

Подсказка: Если n — число островов в северной части архипелага, а m — в южной, то ваше решение должно работать за
O(log(n+m)).


Формат ввода:
В первой строке записано натуральное число n, во второй — натуральное число m. Они не превосходят 10 000.

Далее в строку через пробел записаны n целых неотрицательных чисел, каждое из которых не превосходит
10 000, — значения численности населения в северной части Алгосов.

В последней строке через пробел записаны m целых неотрицательных чисел, каждое из которых не превосходит
10 000 — значения численности населения в южной части Алгосов.

Значения в третьей и четвёртой строках упорядочены по не убыванию.


Формат вывода:
Нужно вывести одной число — найденную медиану.
"""


def find_median(n, m, north, south):
    if n > m:
        n, m, north, south = m, n, south, north

    low = 0
    high = n

    while low <= high:
        partition_north = (low + high) // 2
        partition_south = (n + m + 1) // 2 - partition_north

        max_left_north = north[partition_north - 1] if partition_north > 0 else float('-inf')
        min_right_north = north[partition_north] if partition_north < n else float('inf')

        max_left_south = south[partition_south - 1] if partition_south > 0 else float('-inf')
        min_right_south = south[partition_south] if partition_south < m else float('inf')

        if max_left_north <= min_right_south and max_left_south <= min_right_north:
            if (n + m) % 2 == 0:
                return (max(max_left_north, max_left_south) + min(min_right_north, min_right_south)) / 2
            else:
                return max(max_left_north, max_left_south)
        elif max_left_north > min_right_south:
            high = partition_north - 1
        else:
            low = partition_north + 1

    raise ValueError('Input arrays are not sorted.')


if __name__ == '__main__':
    n = int(input())
    m = int(input())
    north = list(map(int, input().split()))
    south = list(map(int, input().split()))

    print(find_median(n, m, north, south))
