"""
N. Клумбы

_____________________________________________________________________________________________________
| Язык                    | Ограничение времени | Ограничение памяти |   Ввод        |   Вывод      |
_____________________________________________________________________________________________________
| Все языки               | 1 секунда           | 64Mb               |               |              |
| OpenJDK Java 11         | 2 секунды	        | 128Mb              | стандартный   | стандартный  |
| C# (MS .NET 6.0 + ASP)  | 1 секунда           | 128Mb              | ввод или      | вывод или    |
| C# (MS .NET 5.0 + ASP)  | 1 секунда           | 128Mb              | input.txt     | output.txt   |
_____________________________________________________________________________________________________

Алла захотела, чтобы у неё под окном были узкие клумбы с тюльпанами. На схеме земельного участка клумбы
обозначаются просто горизонтальными отрезками, лежащими на одной прямой. Для ландшафтных работ было
нанято n садовников. Каждый из них обрабатывал какой-то отрезок на схеме. Процесс был организован не очень
хорошо, иногда один и тот же отрезок или его часть могли быть обработаны сразу несколькими садовниками.
Таким образом, отрезки, обрабатываемые двумя разными садовниками, сливаются в один. Непрерывный обработанный
отрезок затем станет клумбой. Нужно определить границы будущих клумб.

Рассмотрим примеры.

Пример 1:
Даны 4 отрезка:
[7,8], [7,8] ,[2,3], [6,10]. Два одинаковых отрезка [7,8] и [7,8] сливаются в один, но потом их накрывает
отрезок [6,10]. Таким образом, имеем две клумбы с координатами [2,3] и [6,10].

Пример 2:
Во втором сэмпле опять 4 отрезка: [2,3], [3,4], [3,4], [5,6]. Отрезки [2,3], [3,4] и [3,4] сольются в один
отрезок [2,4]. Отрезок [5,6] ни с кем не объединяется, добавляем его в ответ.


Формат ввода:
В первой строке задано количество садовников n. Число садовников не превосходит 100000. В следующих n строках через
пробел записаны координаты клумб в формате: start end, где start – координата начала, end — координата конца.
Оба числа целые, неотрицательные и не превосходят 107. start строго меньше, чем end.

Формат вывода:
Нужно вывести координаты каждой из получившихся клумб в отдельных строках. Данные должны выводиться в отсортированном
порядке — сначала клумбы с меньшими координатами, затем —– с бОльшими.
"""


n = int(input())  # читаем количество отрезков
segments = []     # список для хранения отрезков

for i in range(n):
    start, end = map(int, input().split())
    segments.append((start, end))

# сортируем отрезки по координате начала
segments.sort()

result = []                       # список для хранения результирующих клумб
cur_start, cur_end = segments[0]  # начинаем с первого отрезка

for i in range(1, n):
    start, end = segments[i]
    if start <= cur_end:             # если текущий отрезок пересекается с предыдущим
        cur_end = max(cur_end, end)  # объединяем их в один отрезок
    else:
        result.append((cur_start, cur_end))  # добавляем текущий отрезок в результат
        cur_start, cur_end = start, end      # начинаем новую клумбу

result.append((cur_start, cur_end))  # добавляем последнюю клумбу в результат

# выводим результирующие клумбы, отсортированные по координате начала
for start, end in result:
    print(start, end)
