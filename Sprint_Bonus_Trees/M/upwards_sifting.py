"""
M. Просеивание вверх

_____________________________________________________________
| Ограничение времени   | 2 секунды                         |
| Ограничение памяти    | 80Mb                              |
| Ввод                  | стандартный ввод или input.txt    |
| Вывод                 | стандартный вывод или output.txt  |
_____________________________________________________________

Напишите функцию, совершающую просеивание вверх в куче на максимум. Гарантируется, что порядок элементов
в куче может быть нарушен только элементом, от которого запускается просеивание.

Функция принимает в качестве аргументов массив, в нём хранятся элементы кучи, и индекс элемента,
от которого надо сделать просеивание вверх. Функция должна вернуть индекс, на котором элемент оказался
после просеивания. Также необходимо изменить порядок элементов в переданном в функцию массиве.

Индексация в массиве, содержащем кучу, начинается с единицы. Таким образом, сыновья вершины на позиции
v это 2v и 2v + 1. Обратите внимание, что нулевой элемент в передаваемом массиве фиктивный, вершина кучи
соответствует 1-му элементу.


Формат ввода:

Элементы кучи —– целые числа, лежащие в диапазоне от −10^9 до 10^9. Все элементы кучи уникальны. Передаваемый
в функцию индекс лежит в диапазоне от 1 до размера передаваемого массива. В куче содержится от 1 до 10^5 элементов.

Используйте заготовки кода для данной задачи.
"""


def sift_up(heap, idx) -> int:
    """Function to move the element at index up the heap
    until it's in a valid spot.
    """
    if idx == 1:
        return idx

    parent_index = idx // 2

    # If the current node is greater than its parent, swap them.
    if heap[parent_index] < heap[idx]:
        heap[parent_index], heap[idx] = heap[idx], heap[parent_index]
        return sift_up(heap, parent_index)
    else:
        return idx


def test():
    sample_heap = [-1, 12, 6, 8, 3, 15, 7]
    # In this test case, the node with value 15 (at position 5) is sifted up.
    assert sift_up(sample_heap, 5) == 1


if __name__ == '__main__':
    test()
