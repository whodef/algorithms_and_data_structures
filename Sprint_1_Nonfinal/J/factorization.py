"""
J. Факторизация

__________________________________________________________________________________________________________
| Язык                  | Ограничение времени  |  Ограничение памяти  |  Ввод           |  Вывод         |
__________________________________________________________________________________________________________
| Все языки             | 0.052 секунды        |  64Mb                |                 |                |
| Node.js 14.15.5       | 0.4 секунд           |  64Mb                |  стандартный    |  стандартный   |
| Python 3.7.3          | 0.2 секунд           |  64Mb                |  ввод или       |  ввод или      |
| C# (MS .Net 5.0)+ASP  | 0.4 секунд           |  64Mb                |  input.txt      |  output.txt    |
| OpenJDK Java 11       | 0.4 секунды          |  64Mb                |                 |                |
| Kotlin 1.8.0 (JRE 11) | 0.4 секунд           |  64Mb                |                 |                |
__________________________________________________________________________________________________________

Основная теорема арифметики говорит: любое число раскладывается на произведение простых множителей единственным образом,
с точностью до их перестановки. Например:

Число 8 можно представить как 2 × 2 × 2.
Число 50 –— как 2 × 5 × 5 (или 5 × 5 × 2, или 5 × 2 × 5). Три варианта отличаются лишь порядком следования множителей.
Разложение числа на простые множители называется факторизацией числа.

Напишите программу, которая производит факторизацию переданного числа.

Формат ввода:
В единственной строке дано число n (2 ≤ n ≤ 109), которое нужно факторизовать.

Формат вывода:
Выведите в порядке неубывания простые множители, на которые раскладывается число n.
"""

from typing import List


def factorize(number: int) -> List[int]:
    # Здесь реализация вашего решения
    pass


result = factorize(int(input()))
print(' '.join(map(str, result)))
