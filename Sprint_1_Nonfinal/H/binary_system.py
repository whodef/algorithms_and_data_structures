"""
H. Двоичная система

____________________________________________________________
| Ограничение времени  | 1 секунда                         |
| Ограничение памяти   | 64Mb                              |
| Ввод                 | стандартный ввод или input.txt    |
| Вывод                | стандартный вывод или output.txt  |
____________________________________________________________

Тимофей записал два числа в двоичной системе счисления и попросил Гошу вывести их сумму, также в двоичной системе.
Встроенную в язык программирования возможность сложения двоичных чисел применять нельзя. Помогите Гоше решить задачу.

Решение должно работать за O(N), где N –— количество разрядов максимального числа на входе.

Формат ввода:
Два числа в двоичной системе счисления, каждое на отдельной строке. Длина каждого числа не превосходит 10 000 символов.

Формат вывода:
Одно число в двоичной системе счисления.
"""

from typing import Tuple


def get_sum(first_number: str, second_number: str) -> str:
    # Выровняем числа по длине, дополнив их нулями
    max_len = max(len(first_number), len(second_number))
    first_number = first_number.zfill(max_len)
    second_number = second_number.zfill(max_len)

    # Пройдем по числам справа налево и складываем разряды
    carry = 0
    result = ''
    for i in range(max_len - 1, -1, -1):
        sum_ = int(first_number[i]) + int(second_number[i]) + carry
        if sum_ >= 2:
            carry = 1
            sum_ -= 2
        else:
            carry = 0
        result = str(sum_) + result

    # Если при сложении старшего разряда получили еще один разряд,
    # то добавим его к результату
    if carry:
        result = '1' + result

    return result


def read_input() -> Tuple[str, str]:
    first_number = input().strip()
    second_number = input().strip()
    return first_number, second_number


first_number, second_number = read_input()
print(get_sum(first_number, second_number))


# Найдём максимальную длину числа. Для этого можно взять максимум из длин двух чисел.
#
# Добавим в начало чисел нули так, чтобы длины чисел совпадали и равнялись максимальной длине, найденной на первом шаге.
#
# Создадим пустую строку, которая будет содержать результат сложения.
#
# Введём переменную, содержащую "единицу переноса" (0 или 1), которую нужно будет добавить к
# следующей паре цифр.
#
# Пройдёмся циклом по всем разрядам чисел, начиная с последнего разряда и до первого.
#
# Добавим к "единице переноса" значение текущего разряда первого числа и значение текущего разряда второго числа.
#
# Если сумма этих двух значений больше 1, значит, мы должны добавить в результат строку с символом 0 и записать 1 в
# "единицу переноса". Иначе мы добавляем в результат строку с символом, равным сумме, и записываем 0 в
# "единицу переноса".
#
# После того как прошли по всем разрядам чисел, проверяем значение "единицы переноса". Если она равна 1, нужно добавить
# ещё один символ к результату, равный единице.
#
# Развернём полученную строку и вернём её в качестве результата. Полученная строка будет содержать сумму двух чисел в
# двоичной системе.
