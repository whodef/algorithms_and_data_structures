"""
C. Скользящее среднее


------------------------------------------------------------
| Ограничение времени	| 1 секунда                        |
------------------------------------------------------------
| Ограничение памяти	| 64Mb                             |
------------------------------------------------------------
| Ввод	                | стандартный ввод или input.txt   |
------------------------------------------------------------
| Вывод	                | стандартный вывод или output.txt |
------------------------------------------------------------


Вам дана статистика по числу запросов в секунду к вашему любимому рекомендательному сервису.

Измерения велись n секунд.

В секунду i поступает qi запросов.

Примените метод скользящего среднего с длиной окна k к этим данным и выведите результат.


Формат ввода:
- В первой строке передаётся натуральное число n, количество секунд, в течение которых велись измерения. 1 ≤ n ≤ 105
- Во второй строке через пробел записаны n целых неотрицательных чисел qi, каждое лежит в диапазоне от 0 до 103.
- В третьей строке записано натуральное число k (1 ≤ k ≤ n) —– окно сглаживания.

Примечание для Go:

Заметьте, что в данной задаче достаточно большой размер ввода. Поэтому необходимо задавать размер буфера для
сканнера хотя бы 600 Кб.


Формат вывода:
Выведите через пробел результат применения метода скользящего среднего к серии измерений. Должно быть
выведено n - k + 1 элементов, каждый элемент -— вещественное (дробное) число.
"""

from typing import List, Tuple


def moving_average(arr: List[int], window_size: int) -> List[float]:
    n = len(arr)
    window_sum = sum(arr[:window_size])
    result = [window_sum / window_size]

    for i in range(window_size, n):
        window_sum += arr[i] - arr[i - window_size]
        result.append(window_sum / window_size)

    return result


def read_input() -> Tuple[List[int], int]:
    n = int(input())
    arr = list(map(int, input().strip().split()))
    window_size = int(input())
    return arr, window_size


arr, window_size = read_input()

print(' '.join(map(str, moving_average(arr, window_size))))


# Для решения задачи нужно реализовать функцию moving_average(arr, window_size), которая принимает на вход
# список arr из n элементов и размер окна сглаживания window_size. Функция должна вернуть список,
# содержащий n - k + 1 элементов, где каждый элемент представляет собой скользящее среднее для соответствующего окна.
#
# Алгоритм решения будет состоять из двух шагов:
#
# 1. Рассчитать сумму первых k элементов списка arr и сохранить ее в переменной window_sum.
# 2. Произвести скользящее среднее, пройдя по списку arr от k до n и добавляя к результату значение window_sum / k.
#
# Затем вычесть из window_sum первый элемент из окна и добавить следующий элемент в окно.
# Таким образом, для каждого окна мы рассчитываем сумму элементов и делим ее на размер окна,
# чтобы получить скользящее среднее.
