"""
A. Мониторинг

___________________________________________________________________________________________________
| Язык                  | Ограничение времени | Ограничение памяти |   Ввод        |   Вывод      |
___________________________________________________________________________________________________
| Все языки             | 1 секунда           | 64Mb               |               |              |
| Node.js 14.15.5       | 1 секунда           | 128Mb              |               |              |
| C# (MS .Net 5.0)+ASP  | 4 секунды           | 150Mb              | стандартный   | стандартный  |
| Oracle Java 8         | 4 секунды           | 150Mb              | ввод или      | вывод или    |
| OpenJDK Java 11       | 4 секунды           | 150Mb              | input.txt     | output.txt   |
| Node JS 8.16          | 1 секунда           | 128Mb              |               |              |
___________________________________________________________________________________________________


Алла получила задание, связанное с мониторингом работы различных серверов. Требуется понять, сколько времени
обрабатываются определённые запросы на конкретных серверах. Эту информацию нужно хранить в матрице, где номер столбца
соответствуют идентификатору запроса, а номер строки — идентификатору сервера. Алла перепутала строки и столбцы
местами. С каждым бывает. Помогите ей исправить баг.

Есть матрица размера m × n. Нужно написать функцию, которая её транспонирует.

Транспонированная матрица получается из исходной заменой строк на столбцы.

Формат ввода:
В первой строке задано число n — количество строк матрицы.
Во второй строке задано m — число столбцов, m и n не превосходят 1000. В следующих n строках задана матрица.
Числа в ней не превосходят по модулю 1000.

Формат вывода:
Напечатайте транспонированную матрицу в том же формате, который задан во входных данных. Каждая строка матрицы
выводится на отдельной строке, элементы разделяются пробелами.
"""


n = int(input())
m = int(input())

matrix = []

for i in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)

# Транспонирование матрицы
transpose_matrix = []
for j in range(m):
    row = []
    for i in range(n):
        row.append(matrix[i][j])
    transpose_matrix.append(row)

# Вывод транспонированной матрицы
for row in transpose_matrix:
    print(' '.join(map(str, row)))
