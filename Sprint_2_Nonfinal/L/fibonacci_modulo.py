"""
L. Фибоначчи по модулю

_____________________________________________________________________________________________________
| Язык                    | Ограничение времени | Ограничение памяти |   Ввод        |   Вывод      |
_____________________________________________________________________________________________________
| Все языки               | 0.7 секунд          | 64Mb               |               |              |
| Node.js 14.15.5         | 1.5 секунд          | 64Mb               | стандартный   | стандартный  |
| OpenJDK Java 11         | 0.25 секунд         | 64Mb               | ввод или      | вывод или    |
| C# (MS .NET 6.0 + ASP)  | 0.25 секунд         | 64Mb               | input.txt     | output.txt   |
| C# (MS .NET 5.0 + ASP)  | 0.25 секунд         | 64Mb               |               |              |
_____________________________________________________________________________________________________

У Тимофея было очень много стажёров, целых N (0 ≤ N ≤ 106) человек. Каждый стажёр хотел быть лучше своих
предшественников, поэтому i-й стажёр делал столько коммитов, сколько делали два предыдущих стажёра в сумме.
Два первых стажёра были менее инициативными — они сделали по одному коммиту.

Пусть Fi —– число коммитов, сделанных i-м стажёром (стажёры нумеруются с нуля). Первые два стажёра сделали
по одному коммиту: F0=F1=1. Для всех i≥ 2 выполнено Fi=Fi−1+Fi−2.

Определите, сколько кода напишет следующий стажёр –— найдите последние k цифр числа Fn.

Как найти k последних цифр

Чтобы вычислить k последних цифр некоторого числа x, достаточно взять остаток от его деления на число 10k.
Эта операция обозначается как x mod 10k. Узнайте, как записывается операция взятия остатка по модулю в вашем языке
программирования.

Также обратите внимание на возможное переполнение целочисленных типов, если в вашем языке такое случается.

Формат ввода:
В первой строке записаны через пробел два целых числа n (0 ≤ n ≤ 106) и k (1 ≤ k ≤ 8).

Формат вывода:
Выведите единственное число – последние k цифр числа Fn.

Если в искомом числе меньше k цифр, то выведите само число без ведущих нулей.
"""

n, k = (int(i) for i in input().split())
ab = [1, 1]
d = (10 ** k)
fib = 0

if n < 2:
    fib = 1
else:
    n -= 1
    for i in range(n):
        s = (ab[0] + ab[1]) % d
        ab[0] = ab[1]
        ab[1] = s
        fib = ab[1]
print(fib)

# Первая строка читает два целых числа из ввода и присваивает их значения переменным n и k.
#
# Следующая строка инициализирует список ab с начальными значениями [1, 1], что соответствует значениям F0=F1=1.
#
# Переменная d равна 10 ** k, то есть d - это k-значное число 10, т.е. d равно 100, если k равно 2.
#
# Переменная fib инициализируется нулем, ее значение будет изменено в цикле.
#
# Если n меньше 2, переменная fib присваивается 1, в противном случае n уменьшается на 1 и запускается цикл for
# со значением переменной i от 0 до n-1.
#
# Внутри цикла суммируются два предыдущих числа последовательности Фибоначчи в списке ab, и результат этой суммы
# берется по модулю d. Затем значение ab[0] присваивается ab[1], а значение ab[1] присваивается s. Значение fib
# присваивается значению ab[1], которое является результатом последней итерации цикла.
#
# В конце значение fib выводится на экран с помощью print().
